Saiseetharam Modugumudi

GOLDEN TASK
##Breast Cancer Prediction

#step-1
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt 
%matplotlib inline
import seaborn as sns

#step-2
df=pd.read_csv("D:\excel pdf\data.csv")

#step-3
df.head()

#step-4
df.describe()

#step-5
df.shape

#step-6
df.info()

#step-7
df.isnull().sum()

#step-8
df.drop(["id"],axis = 1, inplace =True)

#step-9
plt.figure(figsize =(10,9))
sns.countplot(data = df, x="diagnosis")

#step-10
df['diagnosis'] = df['diagnosis'].replace({'M':0,'B':1})

#step-11
count_M = df[df['diagnosis']==1].shape[0]
count_B = df[df['diagnosis']==0].shape[0]

#step-12
total_samples = count_M + count_B

#step-13
percentage_m = (count_M / total_samples) * 100
percentage_b = (count_B / total_samples) * 100

#step-14
print(f"Percentage of malignant samples: {percentage_m:.2f}%")
print(f"Percentage of benign samples: {percentage_b:.2f}%")

#step-15
X=df.drop('diagnosis',axis=1)
y=df['diagnosis']

#step-16
names = df.drop("diagnosis", axis=1).columns
names

#step-17
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression 

#step-18
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2, random_state = 42)

#step-18
lr = LogisticRegression()

#step-19
lr.fit(X_train,y_train)

#step-20
y_pred = lr.predict(X_test)

#step-21
y_pred

#step-22
from sklearn.metrics import accuracy_score , classification_report

#step-23
acc = accuracy_score(y_test,y_pred) * 100
print("Accuracy Score : {}".format(acc))

#step-24
print("Classification Report :\n {}".format(classification_report(y_test,y_pred)))


